{"version":3,"file":"no-effect-decorator.js","sourceRoot":"","sources":["../../../../../../modules/eslint-plugin/src/rules/effects/no-effect-decorator.ts"],"names":[],"mappings":"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","sourcesContent":["import type { TSESLint, TSESTree } from '@typescript-eslint/experimental-utils';\nimport * as path from 'path';\nimport { createRule } from '../../rule-creator';\nimport {\n  getDecoratorArguments,\n  getImportAddFix,\n  isIdentifier,\n  NGRX_MODULE_PATHS,\n  propertyDefinitionWithEffectDecorator,\n} from '../../utils';\n\nexport const noEffectDecorator = 'noEffectDecorator';\nexport const noEffectDecoratorSuggest = 'noEffectDecoratorSuggest';\n\ntype MessageIds = typeof noEffectDecorator | typeof noEffectDecoratorSuggest;\ntype Options = readonly [];\ntype EffectDecorator = TSESTree.Decorator & {\n  parent: TSESTree.PropertyDefinition & {\n    parent: TSESTree.ClassBody & { parent: TSESTree.ClassDeclaration };\n    value: TSESTree.CallExpression;\n  };\n};\n\nconst createEffectKeyword = 'createEffect';\n\nexport default createRule<Options, MessageIds>({\n  name: path.parse(__filename).name,\n  meta: {\n    type: 'suggestion',\n    hasSuggestions: true,\n    ngrxModule: 'effects',\n    docs: {\n      description: `The \\`${createEffectKeyword}\\` is preferred as the \\`@Effect\\` decorator is deprecated.`,\n      recommended: 'warn',\n      suggestion: true,\n    },\n    fixable: 'code',\n    schema: [],\n    messages: {\n      [noEffectDecorator]: `The \\`@Effect\\` decorator is deprecated. Use \\`${createEffectKeyword}\\` instead.`,\n      [noEffectDecoratorSuggest]: `Remove the \\`@Effect\\` decorator.`,\n    },\n  },\n  defaultOptions: [],\n  create: (context) => {\n    const sourceCode = context.getSourceCode();\n\n    return {\n      [propertyDefinitionWithEffectDecorator](node: EffectDecorator) {\n        const isUsingEffectCreator =\n          isIdentifier(node.parent.value.callee) &&\n          node.parent.value.callee.name === createEffectKeyword;\n\n        if (isUsingEffectCreator) {\n          context.report({\n            node,\n            messageId: noEffectDecorator,\n            suggest: [\n              {\n                messageId: noEffectDecoratorSuggest,\n                fix: (fixer) => fixer.remove(node),\n              },\n            ],\n          });\n        } else {\n          context.report({\n            node,\n            messageId: noEffectDecorator,\n            fix: (fixer) => getFixes(node, sourceCode, fixer),\n          });\n        }\n      },\n    };\n  },\n});\n\nfunction getCreateEffectFix(\n  fixer: TSESLint.RuleFixer,\n  propertyValueExpression: TSESTree.CallExpression\n): TSESLint.RuleFix {\n  return fixer.insertTextBefore(\n    propertyValueExpression,\n    `${createEffectKeyword}(() => { return `\n  );\n}\n\nfunction getCreateEffectConfigFix(\n  fixer: TSESLint.RuleFixer,\n  propertyValueExpression: TSESTree.CallExpression,\n  configText?: string\n): TSESLint.RuleFix {\n  const append = configText ? `, ${configText}` : '';\n  return fixer.insertTextAfter(propertyValueExpression, `}${append})`);\n}\n\nfunction getFixes(\n  node: EffectDecorator,\n  sourceCode: Readonly<TSESLint.SourceCode>,\n  fixer: TSESLint.RuleFixer\n): readonly TSESLint.RuleFix[] {\n  const classDeclaration = node.parent.parent.parent;\n  const {\n    parent: { value: propertyValueExpression },\n  } = node;\n\n  const [decoratorArgument] = getDecoratorArguments(node);\n  const configText = decoratorArgument\n    ? sourceCode.getText(decoratorArgument)\n    : undefined;\n\n  return [\n    fixer.remove(node),\n    getCreateEffectFix(fixer, propertyValueExpression),\n    getCreateEffectConfigFix(fixer, propertyValueExpression, configText),\n  ].concat(\n    getImportAddFix({\n      fixer,\n      importName: createEffectKeyword,\n      moduleName: NGRX_MODULE_PATHS.effects,\n      node: classDeclaration,\n    })\n  );\n}\n"]}